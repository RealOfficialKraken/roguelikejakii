;;-*-Lisp-*-
    (in-package goal)

    ;; name: checkpoint-randomizer.gc
    ;; name in dgo: checkpoint-randomizer
    ;; dgos: TODO

    ;this file is only used for the (all-randomize) function, 
    ;everything else in this file is either for certain items, or for testing purposes


    (defun act1-1-randomize ()
        (let (
        (level-pick (rand-vu-int-range 1 8))
        )
        (format #t "<<<<<<<<<<<<<<<<<<<<<<<<<<Level picked: ~D" level-pick)
        (set! roll-shopitems #t)
        (set! enemy-drop-weapon-once #f)
        (when (= level-pick act-before1)
            (set! level-pick (rand-vu-int-range 1 8))
            (format #t "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Level picked the same mission! Rerolling to: ~D" level-pick)
          )
          (set! print-stage 1)
          (when (and (= level-pick 1)(!= act-before1 1))
            (send-event *target* 'continue (get-continue-by-name *game-info* "ruins-start"))
            (play-task (game-task ruins-tower) 'debug #f)
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 2)(!= act-before1 2))
            (send-event *target* 'continue (get-continue-by-name *game-info* "atoll-start"))
            (play-task (game-task atoll-water) 'debug #f)
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 3)(!= act-before1 3))
            (send-event *target* 'continue (get-continue-by-name *game-info* "ctysluma-alley-no-hideout"))
            (play-task (game-task city-krew-delivery) 'debug #f)
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 4)(!= act-before1 5))
            (send-event *target* 'continue (get-continue-by-name *game-info* "strip-start"))
            (play-task (game-task strip-rescue) 'debug #f)
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 5)(!= act-before1 6))
            (send-event *target* 'continue (get-continue-by-name *game-info* "atoll-battle"))
            (play-task (game-task atoll-battle) 'debug #f)
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 6)(!= act-before1 7))
            (send-event *target* 'continue (get-continue-by-name *game-info* "ctyport-hiphog"))
            (play-task (game-task city-krew-collection) 'debug #f)
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node palace-boss-resolution))
            (set! waitenter #t)
            
          )
          (when (and (= level-pick 7)(!= act-before1 8))
            (send-event *target* 'continue (get-continue-by-name *game-info* "ctyport-hiphog"))
            (play-task (game-task city-keira-delivery) 'debug #f)
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (set! waitenter #t)
            
          )
          (set! wait-extra-for-ingame #t)
          (set! act-act 1)
        )
    )
    (defun act1-randomize ()
        (let (
        (level-pick (rand-vu-int-range 1 12))
        )
        (format #t "<<<<<<<<<<<<<<<<<<<<<<<<<<Level picked: ~D" level-pick)
        (set! print-stage 2)
        (when (= level-pick act-before1)
            (set! level-pick (rand-vu-int-range 1 12))
            (format #t "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<Level picked the same mission! Rerolling to: ~D" level-pick)
          )
          (when (= level-pick 1)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task ruins-tower) "ruins-start")
          )
          (when (= level-pick 2)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task atoll-water) "atoll-start")
          )
          (when (= level-pick 3)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task fortress-dump) "fordumpa-start")
          )
          (when (= level-pick 4)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task city-krew-delivery) "ctysluma-alley-no-hideout")
          )
          (when (= level-pick 5)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task atoll-sig) "atoll-start")
          )
          (when (= level-pick 6)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task sewer-enemy) "sewer-start")
          )
          (when (= level-pick 7)
            (dm-play-task-with-continue (game-task strip-rescue) "strip-start")
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 8)
            (dm-play-task-with-continue (game-task atoll-battle) "atoll-battle")
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 9)
            (dm-play-task-with-continue (game-task city-krew-collection) "ctyport-hiphog")
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node palace-boss-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 10)
            (dm-play-task-with-continue (game-task city-power) "vinroom-start")
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 11)
            (dm-play-task-with-continue (game-task city-keira-delivery) "ctyport-hiphog")
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 12)
            (dm-play-task-with-continue (game-task mountain-lens) "mountain-start")
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (task-node-close! (game-task-node palace-boss-resolution))
            (set! waitenter #t)
            
          )
          (set! wait-for-ingame #t)
          (set! (-> *game-info* gem) temp-skullgemamount)
          (set! (-> *target* fact health) temp-health)
          (set! (-> *game-info* skill) temp-orbs)
        )
    )

    (defun act2-randomize ()
    
    )

    (defun act3-randomize ()
    
    )

    (defun act4-randomize ()
    
    )

    (defun update-nestmood ()
      (set! (-> *mood-control* overide-weather-flag) #t)
      (set! (-> *mood-control* overide fog) 1.0)
      (set! (-> *mood-control* overide cloud) 1.0)
      (set! (-> *overide-mood-color-table* data (logand (-> *time-of-day-context* mode) (time-of-day-palette-id unk0 unk1 unk2)) amb-color x) 1.9921)
      (set! (-> *overide-mood-color-table* data (logand (-> *time-of-day-context* mode) (time-of-day-palette-id unk0 unk1 unk2)) amb-color y) 1.9921)
      (set! (-> *overide-mood-color-table* data (logand (-> *time-of-day-context* mode) (time-of-day-palette-id unk0 unk1 unk2)) amb-color z) 1.9921)
      (set! (-> *overide-mood-color-table* data (logand (-> *time-of-day-context* mode) (time-of-day-palette-id unk0 unk1 unk2)) amb-color w) 2.0)
    )

    (defun all-randomize ()
      (let (
        (level-pick (rand-vu-int-range 1 37))
        )
        (when (= level-pick 1)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task ruins-tower) "ruins-start")
          )
          (when (= level-pick 2)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task atoll-water) "atoll-start")
          )
          (when (= level-pick 3)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task fortress-dump) "fordumpa-start")
          )
          (when (= level-pick 4)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task city-krew-delivery) "ctysluma-alley-no-hideout")
          )
          (when (= level-pick 5)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task atoll-sig) "atoll-start")
          )
          (when (= level-pick 6)
            (set! waitenter #t)
            (dm-play-task-with-continue (game-task sewer-enemy) "sewer-start")
          )
          (when (= level-pick 7)
            (dm-play-task-with-continue (game-task strip-rescue) "strip-start")
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 8)
            (dm-play-task-with-continue (game-task atoll-battle) "atoll-battle")
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 9)
            (dm-play-task-with-continue (game-task city-krew-collection) "ctyport-hiphog")
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node stadium-board1-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node palace-boss-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 10)
            (dm-play-task-with-continue (game-task city-power) "vinroom-start")
            (task-node-close! (game-task-node drill-eggs-resolution))
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-krew-collection-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 11)
            (dm-play-task-with-continue (game-task city-keira-delivery) "ctyport-hiphog")
            (task-node-close! (game-task-node mountain-collection-resolution))
            (task-node-close! (game-task-node city-yellow-gun-training-resolution))
            (task-node-close! (game-task-node drill-eggs-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 12)
            (dm-play-task-with-continue (game-task ruins-enemy) "ruins-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 13)
            (dm-play-task-with-continue (game-task forest-scouts) "forest-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 14)
            (dm-play-task-with-continue (game-task dig-knock-down) "dig1-start")
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 15)
            (dm-play-task-with-continue (game-task strip-grenade) "strip-start")
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 16)
            (dm-play-task-with-continue (game-task city-port-run) "ctyport-start")
            (task-node-close! (game-task-node city-escort-kid-resolution))
            (task-node-close! (game-task-node drill-ship-resolution))
            (task-node-close! (game-task-node dig-find-totem-resolution))
            (task-node-close! (game-task-node city-destroy-guard-vehicles-resolution))
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (set! waitenter #t)
          )
          (when (= level-pick 17)
            (dm-play-task-with-continue (game-task city-meet-brutter) "ctyport-hiphog")
            (task-node-close! (game-task-node city-meet-brutter-introduction))
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 18)
            (dm-play-task-with-continue (game-task sewer-board) "sewer-start")
            (task-node-close! (game-task-node city-escort-kid-resolution))
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (task-node-close! (game-task-node drill-ship-resolution))
            (task-node-close! (game-task-node dig-find-totem-resolution))
            (task-node-close! (game-task-node city-destroy-guard-vehicles-resolution))
            (set! waitenter #t)
          )
          (when (= level-pick 19)
            (dm-play-task-with-continue (game-task city-intercept-tanker) "ctymarkb-tanker")
            (task-node-close! (game-task-node city-escort-kid-resolution))
            (task-node-close! (game-task-node city-port-run-post-win))
            (task-node-close! (game-task-node dig-find-totem-resolution))
            (task-node-close! (game-task-node city-destroy-guard-vehicles-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 20)
            (dm-play-task-with-continue (game-task city-shuttle) "ctysluma-alley-no-hideout")
            (set! waitenter #t)
            
          )
          (when (= level-pick 21)
            (dm-play-task-with-continue (game-task dig-find-totem) "dig3-start")
            (task-node-close! (game-task-node city-port-run-post-win))
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (task-node-close! (game-task-node forest-hunt-resolution))
            (set! waitenter #t)
            
          )
          (when (= level-pick 22)
            (dm-play-task-with-continue (game-task city-destroy-guard-vehicles) "ctysluma-alley-no-hideout")
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (set! waitenter #t)
          )
          (when (= level-pick 23)
            (dm-play-task-with-continue (game-task forest-hunt) "forest-start")
            (task-node-close! (game-task-node city-intercept-tanker-resolution))
            (task-node-close! (game-task-node city-escort-kid-resolution))
            (task-node-close! (game-task-node dig-find-totem-resolution))
            (task-node-close! (game-task-node city-protect-water-slums-resolution))
            (task-node-close! (game-task-node city-destroy-guard-vehicles-resolution))
            (task-node-close! (game-task-node stadium-race-class3-resolution))
          )
          (when (= level-pick 24)
            (dm-play-task-with-continue (game-task sewer-escort) "sewesc-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 25)
            (dm-play-task-with-continue (game-task city-stop-bomb-bots) "ctysluma-alley-no-hideout")
            (set! waitenter #t)
            
          )
          (when (= level-pick 26)
            (dm-play-task-with-continue (game-task strip-drop) "strip-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 27)
            (dm-play-task-with-continue (game-task city-save-lurkers) "ctymarka-brutter")
            (set! waitenter #t)
            
          )
          (when (= level-pick 28)
            (dm-play-task-with-continue (game-task under-sig) "under-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 29)
            (dm-play-task-with-continue (game-task city-defend-stadium) "stadium-blimp-intro")
            (task-node-close! (game-task-node city-meet-brutter-introduction))
            (set! waitenter #t)
            
          )
          (when (= level-pick 30)
            (dm-play-task-with-continue (game-task forest-protect) "forest-tree")
            (set! waitenter #t)
            
          )
          (when (= level-pick 31)
            (dm-play-task-with-continue (game-task ruins-mech) "ruins-start")
            (set! waitenter #t)
            
          )
          (when (= level-pick 32)
            (dm-play-task-with-continue (game-task city-escort-kid) "ctysluma-alley-no-hideout")
            (set! waitenter #t)
          )
          (when (= level-pick 33)
            (dm-play-task-with-continue (game-task fortress-save-friends) "forresca-start")
            (set! waitenter #t)
          )
          (when (= level-pick 34)
            (dm-play-task-with-continue (game-task city-protect-water-slums) "ctyslumc-slums")
            (set! waitenter #t)
          )
          (when (= level-pick 35)
            (dm-play-task-with-continue (game-task palace-sneak-in) "throne-ashelin")
            (set! waitenter #t)
          )
        (set! (-> *game-info* gem) temp-skullgemamount)
        (set! (-> *target* fact health) temp-health)
        (set! (-> *game-info* skill) temp-orbs)
      )
    )

    (defun activate-weight-start ()
      (set! (-> *run-attack-mods* align-speed) (/ (-> *run-attack-mods* align-speed) 2))
      (set! (-> *attack-mods* align-speed) (/ (-> *attack-mods* align-speed) 2))
      (set! (-> *uppercut-jump-mods* align-speed) (/ (-> *uppercut-jump-mods* align-speed) 2))
      (set! (-> *uppercut-jump-mods* slope-up-factor) (/ (-> *uppercut-jump-mods* slope-up-factor) 2))
    )

    (defun weight-add ()
    ;runs every enemy kill after buying training weight.
    ;It also saves float values to global variables for later use.
      (when (and (< (-> *run-attack-mods* align-speed) 4.9999))
        (+! (-> *run-attack-mods* align-speed) 0.025)
        (set! punch-alignspeed (-> *run-attack-mods* align-speed))
      )
      (when (and (< (-> *attack-mods* align-speed) 4.9999))
        (+! (-> *attack-mods* align-speed) 0.025)
        (set! twirl-alignspeed (-> *attack-mods* align-speed))
      )
      (when (and (< (-> *uppercut-jump-mods* align-speed) 4.9999))
        (+! (-> *uppercut-jump-mods* align-speed) 0.025)
        (set! uppercut-alignspeed (-> *uppercut-jump-mods* slope-up-traction))
      )
      (when (and (< (-> *uppercut-jump-mods* slope-up-factor) 4.9999))
        (+! (-> *uppercut-jump-mods* slope-up-factor) 0.025)
        (set! uppercut-traction (-> *uppercut-jump-mods* slope-up-factor))
      )
    )

    (defun vehicle-particle-roll ()
      (let 
      (
        (roll (rand-vu-int-range 1 5))
        (color-red (new 'static 'vector :x 255.0 :y 0.0 :z 0.0 :w 1.0))
        (color-yellow (new 'static 'vector :x 0.0 :y 255.0 :z 0.0 :w 1.0))
        (color-blue (new 'static 'vector :x 0.0 :y 0.0 :z 255.0 :w 1.0))
        (color-lightblue (new 'static 'vector :x 0.0 :y 127.0 :z 127.0 :w 1.0))
        (color-orange (new 'static 'vector :x 127.0 :y 127.0 :z 0.0 :w 1.0))
        (color-white (new 'static 'vector :x 255.0 :y 255.0 :z 255.0 :w 1.0))
      )
      (when (= roll 1)
        (set! (-> *part-id-table* 776 init-specs 2 initial-valuef) (-> color-red x))
      )
      (when (= roll 2)
        (set! (-> *part-id-table* 776 init-specs 2 initial-valuef) (-> color-yellow x))
      )
      (when (= roll 3)
        (set! (-> *part-id-table* 776 init-specs 2 initial-valuef) (-> color-blue x))
      )
      (when (= roll 4)
      (set! (-> *part-id-table* 776 init-specs 2 initial-valuef) (-> color-red x))
      )
      (when (= roll 5)
      (set! (-> *part-id-table* 776 init-specs 2 initial-valuef) (-> color-red x))
      )
      )
    )

    (defun color-light-eco ()
    (set! (-> *part-id-table* 390 init-specs 9 initial-valuef) 255.0)
    (set! (-> *part-id-table* 398 init-specs 6 initial-valuef) 255.0)
    (set! (-> *part-id-table* 398 init-specs 7 initial-valuef) 255.0)
    (set! (-> *part-id-table* 398 init-specs 8 initial-valuef) 255.0)
    (set! (-> *part-id-table* 393 init-specs 6 initial-valuef) 255.0)
    (set! (-> *part-id-table* 393 init-specs 7 initial-valuef) 27.0)
    (set! (-> *part-id-table* 399 init-specs 6 initial-valuef) 255.0)
    (set! (-> *part-id-table* 399 init-specs 7 initial-valuef) 255.0)
    (set! (-> *part-id-table* 399 init-specs 11 initial-valuef) 255.0)
    (set! (-> *part-id-table* 391 init-specs 10 initial-valuef) 750.0)
    (set! (-> *part-id-table* 423 init-specs 6 initial-valuef) 255.0)
    (set! (-> *part-id-table* 423 init-specs 7 initial-valuef) 255.0)
    (set! (-> *part-id-table* 423 init-specs 8 initial-valuef) 255.0)
    (set! (-> *part-id-table* 424 init-specs 9 initial-valuef) 0.3)
    (none)
    )

    (defun color-gem ()
      (let (
        (rndcolor (rand-vu-float-range 0.1 255.0))
        (rndcolor2 (rand-vu-float-range 0.1 255.0))
        (rndcolor3 (rand-vu-float-range 0.1 255.0))
        (rnd-x 0.0)
        (rnd-y 0.0)
        (rnd-z 0.0)
      )
        (set! rnd-x rndcolor)
        (set! rnd-y rndcolor2)
        (set! rnd-z rndcolor3)
        (set! (-> *part-id-table* 311 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 311 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 311 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 311 init-specs 8 initial-valuef) 60.0)
        (set! (-> *part-id-table* 314 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 314 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 314 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 314 init-specs 8 initial-valuef) 60.0)
      )
    )

    (defun color-vehicle ()
      (let (
        (rndcolor (rand-vu-float-range 0.1 255.0))
        (rndcolor2 (rand-vu-float-range 0.1 255.0))
        (rndcolor3 (rand-vu-float-range 0.1 255.0))
        (rnd-x 0.0)
        (rnd-y 0.0)
        (rnd-z 0.0)
      )
        (set! rnd-x rndcolor)
        (set! rnd-y rndcolor2)
        (set! rnd-z rndcolor3)
        #|(set! (-> *part-id-table* 769 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 769 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 769 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 770 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 770 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 770 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 771 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 771 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 771 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 772 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 772 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 772 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 773 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 773 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 773 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 774 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 774 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 774 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 775 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 775 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 775 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 776 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 776 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 776 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 777 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 777 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 777 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 778 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 778 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 778 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 779 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 779 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 779 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 780 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 780 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 780 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 781 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 781 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 781 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 782 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 782 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 782 init-specs 7 initial-valuef) rnd-z)
        (set! (-> *part-id-table* 783 init-specs 5 initial-valuef) rnd-x)
        (set! (-> *part-id-table* 783 init-specs 6 initial-valuef) rnd-y)
        (set! (-> *part-id-table* 783 init-specs 7 initial-valuef) rnd-z)|#
      )
    )

